{"version":3,"sources":["actions/booksActions.js","components/Book.js","components/Navbar.js","pages/BooksPage.js","App.js","reducers/booksReducer.js","reducers/index.js","serviceWorker.js","index.js"],"names":["fetchBooks","book","author","dispatch","a","type","fetch","response","json","data","payload","items","BookCardWrapper","styled","div","BookCardTitle","h2","BookCardImage","img","BookCardDetails","BookCardPublished","p","BookCardAuthors","BookCardPages","Book","volumeInfo","title","authors","pageCount","publishedDate","imageLinks","thumbnail","data-testid","toUpperCase","src","alt","map","index","key","length","NavbarFormWrapper","FormInput","input","FormButton","button","Navbar","loading","initialFormState","useState","search","setSearch","handleInputChange","event","target","name","value","onSubmit","preventDefault","placeholder","onChange","disabled","BooksPageWrapper","BooksPageTitle","h1","BooksWrapper","spin","keyframes","Loader","connect","books","hasErrors","id","AppWrapper","App","initialState","rootReducer","combineReducers","state","action","Boolean","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aab0f6f3.chunk.js","sourcesContent":["export const GET_BOOKS = \"GET_BOOKS\";\nexport const GET_BOOKS_SUCCESS = \"GET_BOOKS_SUCCESS\";\nexport const GET_BOOKS_FAILURE = \"GET_BOOKS_FAILURE\";\n\nexport const getBooks = () => ({\n  type: GET_BOOKS,\n});\n\nexport const getBooksSuccess = (books) => ({\n  type: GET_BOOKS_SUCCESS,\n  payload: books,\n});\n\nexport const getBooksFailure = () => ({\n  type: GET_BOOKS_FAILURE,\n});\n\n// create async thunk function\nexport function fetchBooks({ book = \"\", author = \"\" }) {\n  return async (dispatch) => {\n    // can be passed in from outside in the function call\n    const ITEMS_PER_PAGE = 40;\n\n    dispatch(getBooks());\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/books/v1/volumes?q=${book}+inauthor:${author}&key=AIzaSyBAkrpT-aAQrsE8k0yF20lO-ZtbuZRjmig&maxResults=${ITEMS_PER_PAGE}&startIndex=0`\n      );\n      const data = await response.json();\n      dispatch(getBooksSuccess(data.items));\n    } catch (e) {\n      dispatch(getBooksFailure());\n    }\n  };\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Book = (book) => {\n  const {\n    volumeInfo: {\n      title,\n      authors = [\"Data not available\"],\n      pageCount = \"Data not available\",\n      publishedDate,\n      imageLinks: { thumbnail } = {\n        thumbnail:\n          \"https://www.azfinesthomes.com/assets/images/image-not-available.jpg\",\n      },\n    },\n  } = book.book;\n\n  return (\n    <BookCardWrapper data-testid=\"book-wrapper\">\n      <BookCardTitle>{title.toUpperCase()}</BookCardTitle>\n      <BookCardImage src={thumbnail} alt={title} />\n      <BookCardDetails>\n        <BookCardPublished>Published date: {publishedDate}</BookCardPublished>\n        <BookCardAuthors>\n          Authors:{\" \"}\n          {authors.map((author, index) => {\n            return (\n              <span key={author}>\n                <strong>\n                  {author}\n                  {index !== authors.length - 1 ? \" and \" : \"\"}\n                </strong>\n              </span>\n            );\n          })}\n        </BookCardAuthors>\n        <BookCardPages>Number of pages - {pageCount}</BookCardPages>\n      </BookCardDetails>\n    </BookCardWrapper>\n  );\n};\n\nBook.propTypes = {\n  book: PropTypes.object,\n};\n\nconst BookCardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  flex: 0 1 250px;\n  font-family: \"Ubuntu\", sans-serif;\n  transition: all 0.3s ease-in-out;\n\n  @media screen and (max-width: 415px) {\n    flex: 0 1 80%;\n  }\n\n  padding: 10px;\n  -webkit-box-shadow: 2px 4px 17px 0 rgba(0, 0, 0, 0.45);\n  -moz-box-shadow: 2px 4px 17px 0 rgba(0, 0, 0, 0.45);\n  box-shadow: 2px 4px 17px 0 rgba(0, 0, 0, 0.45);\n\n  &:hover {\n    transform: scale(1.04);\n  }\n`;\n\nconst BookCardTitle = styled.h2`\n  font-size: 16px;\n  text-align: center;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  height: 35px;\n  font-weight: bold;\n`;\n\nconst BookCardImage = styled.img`\n  width: 153px;\n  height: 200px;\n  object-fit: cover;\n  border: 2px solid rgba(66, 37, 59, 0.1);\n  padding: 5px;\n`;\n\nconst BookCardDetails = styled.div`\n  border: 1px solid grey;\n  width: 100%;\n  text-align: center;\n  background-color: #42253b;\n  color: #fff;\n  padding: 0 10px;\n  font-size: 12px;\n  margin: 20px 0 10px 0;\n`;\n\nconst BookCardPublished = styled.p``;\n\nconst BookCardAuthors = styled.p`\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst BookCardPages = styled.p``;\n\nexport default Book;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Navbar = ({ dispatch, fetchBooks, loading }) => {\n  const initialFormState = { book: \"\", author: \"\" };\n\n  const [search, setSearch] = useState(initialFormState);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setSearch({ ...search, [name]: value });\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    dispatch(fetchBooks(search));\n    setSearch(initialFormState);\n  };\n\n  return (\n    <NavbarFormWrapper>\n      <form onSubmit={handleFormSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"book\"\n          value={search.book}\n          placeholder=\"Search by book title\"\n          onChange={handleInputChange}\n        />\n        <FormInput\n          type=\"text\"\n          name=\"author\"\n          value={search.author}\n          placeholder=\"Search by author\"\n          onChange={handleInputChange}\n        />\n        <FormButton type=\"submit\" disabled={loading}>\n          Search\n        </FormButton>\n      </form>\n    </NavbarFormWrapper>\n  );\n};\n\nNavbar.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  fetchBooks: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nconst NavbarFormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst FormInput = styled.input`\n  padding: 10px 20px;\n  margin-right: 5px;\n  border: 1px solid grey;\n  border-radius: 5px;\n\n  ::placeholder {\n    color: #333;\n  }\n`;\n\nconst FormButton = styled.button`\n  padding: 11px 21px;\n  background-color: #42253b;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n`;\n\nexport default Navbar;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport { fetchBooks } from \"../actions/booksActions\";\nimport Book from \"../components/Book\";\nimport Navbar from \"../components/Navbar\";\n\nconst BooksPage = ({ dispatch, books, loading, hasErrors }) => {\n  const renderBooks = () => {\n    if (loading) return <Loader />;\n    if (hasErrors) return <p>Unable to display books.</p>;\n    return books.map((book) => <Book key={book.id} book={book} />);\n  };\n\n  return (\n    <BooksPageWrapper>\n      <BooksPageTitle>Looking for books?</BooksPageTitle>\n      <Navbar fetchBooks={fetchBooks} dispatch={dispatch} loading={loading} />\n      <BooksWrapper>{renderBooks()}</BooksWrapper>\n    </BooksPageWrapper>\n  );\n};\n\nconst mapStateToProps = ({ books: { books, loading, hasErrors } }) => ({\n  books,\n  loading,\n  hasErrors,\n});\n\nBooksPage.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loading: PropTypes.bool.isRequired,\n  hasErrors: PropTypes.bool.isRequired,\n};\n\nconst BooksPageWrapper = styled.div`\n  margin: 40px 0;\n`;\n\nconst BooksPageTitle = styled.h1`\n  text-align: center;\n  font-size: 36px;\n  font-family: \"Gentium Book Basic\", serif;\n`;\n\nconst BooksWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n  padding: 50px;\n`;\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst Loader = styled.div`\n  border: 10px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 10px solid #3498db;\n  width: 50px;\n  height: 50px;\n  -webkit-animation: ${spin} 2s linear infinite; /* Safari */\n  animation: ${spin} 2s linear infinite;\n`;\n\nexport default connect(mapStateToProps)(BooksPage);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport BooksPage from \"./pages/BooksPage\";\n\nconst App = () => {\n  return (\n    <AppWrapper>\n      <BooksPage />\n    </AppWrapper>\n  );\n};\n\nconst AppWrapper = styled.div``;\n\nexport default App;\n","import * as actions from \"../actions/booksActions\";\n\nexport const initialState = {\n  books: [],\n  loading: false,\n  hasErrors: false,\n};\n\nexport default function booksReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_BOOKS:\n      return { ...state, loading: true };\n    case actions.GET_BOOKS_SUCCESS:\n      return { books: action.payload, loading: false, hasErrors: false };\n    case actions.GET_BOOKS_FAILURE:\n      return { ...state, loading: false, hasErrors: true };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport booksReducer from \"./booksReducer\";\n\nconst rootReducer = combineReducers({\n  books: booksReducer,\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// External imports\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// Local imports\nimport App from \"./App\";\nimport rootReducer from \"./reducers\";\n\n// PWA\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}